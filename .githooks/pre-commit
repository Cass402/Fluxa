#!/bin/bash

# Fluxa Git pre-commit hook
# This hook runs various checks before allowing a commit to proceed

# Exit on error
set -e

# Color definitions for better readability
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Running pre-commit checks for Fluxa...${NC}"

# Check if we're running on Apple Silicon (M1/M2)
ARCH=$(uname -m)
IS_ARM=false
if [ "$ARCH" = "arm64" ]; then
    IS_ARM=true
    echo -e "${YELLOW}Detected Apple Silicon (M1/M2). Using local tools instead of Docker.${NC}"
fi

# Function to run a check and handle errors
run_check() {
    local check_name="$1"
    local command="$2"
    local local_command="$3"
    
    echo -e "${YELLOW}Running ${check_name}...${NC}"
    
    # If we're on ARM architecture or local command is forced, use local command
    if [ "$IS_ARM" = true ] && [ -n "$local_command" ]; then
        if ! eval "$local_command"; then
            echo -e "${RED}❌ ${check_name} failed. Please fix issues before committing.${NC}"
            return 1
        else
            echo -e "${GREEN}✅ ${check_name} passed.${NC}"
            return 0
        fi
    else
        # Check if Docker is running
        if ! docker info > /dev/null 2>&1; then
            echo -e "${RED}Error: Docker is not running. Please start Docker and try again.${NC}"
            exit 1
        fi

        # Check if our containers are running
        if ! docker compose ps | grep -q "fluxa-dev.*Up"; then
            echo -e "${RED}Error: fluxa-dev container is not running. Please start with 'docker compose up -d' and try again.${NC}"
            exit 1
        fi
        
        if ! eval "$command"; then
            echo -e "${RED}❌ ${check_name} failed. Please fix issues before committing.${NC}"
            return 1
        else
            echo -e "${GREEN}✅ ${check_name} passed.${NC}"
            return 0
        fi
    fi
}

# Check if any Rust files are being committed
if git diff --cached --name-only | grep -E '\.rs$'; then
    # Rust formatting check
    run_check "Rust formatting" \
        "docker compose exec -T fluxa-dev bash -c 'cd /app/programs && cargo fmt --all -- --check'" \
        "cd $(git rev-parse --show-toplevel)/programs && cargo fmt --all -- --check" || exit 1
    
    # Rust clippy check for stricter linting
    run_check "Rust clippy" \
        "docker compose exec -T fluxa-dev bash -c 'cd /app/programs && cargo clippy -- -D warnings'" \
        "cd $(git rev-parse --show-toplevel)/programs && cargo clippy -- -D warnings" || exit 1
fi

# Check if any TypeScript/JavaScript files are being committed
if git diff --cached --name-only | grep -E '\.(ts|tsx|js|jsx)$'; then
    # Frontend linting check
    run_check "Frontend linting" \
        "docker compose exec -T fluxa-dev bash -c 'cd /app/frontend && npm run lint'" \
        "cd $(git rev-parse --show-toplevel)/frontend && npm run lint" || exit 1
    
    # TypeScript type check if tsconfig.json exists
    if [ -f "$(git rev-parse --show-toplevel)/frontend/tsconfig.json" ]; then
        run_check "TypeScript type check" \
            "docker compose exec -T fluxa-dev bash -c 'cd /app/frontend && npm run type-check'" \
            "cd $(git rev-parse --show-toplevel)/frontend && npm run type-check" || exit 1
    fi
fi

# Check for hardcoded secrets (simple pattern matching)
if git diff --cached -U0 | grep -i "key\|secret\|password\|token" | grep -E "['\"][a-zA-Z0-9]{16,}['\"]"; then
    echo -e "${RED}⚠️ Warning: Possible hardcoded secrets/credentials detected. Please review your changes.${NC}"
    echo -e "${YELLOW}Consider using environment variables or a secrets management solution.${NC}"
    # Not exiting with error, just warning
fi

echo -e "${GREEN}All pre-commit checks passed! Proceeding with commit.${NC}"
exit 0